@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment WebHostEnvironment
@inject FileStorageService FileStorageService

<MudDialog>
    <DialogContent>
        <EditForm EditContext="@editContext">
            <DataAnnotationsValidator />
            <MudGrid Class="mt-5">
                <MudItem>
                    <MudAvatar Rounded="true" Image="@Context.Image" Size="Size.Large" />
                 </MudItem>
                <MudItem>
                    <InputFile id="fileInput" OnChange="OnInputFileChange" hidden />
                    <MudFab HtmlTag="label"
                            Color="Color.Secondary"
                            Icon="@Icons.Filled.Image"
                            Label="Загрузить"
                            for="fileInput" />
                </MudItem>
            </MudGrid>
            <MudTextField Label="Название" Class="mt-3"
                          @bind-Value="Context.Text" For="@(() => Context.Text)" />
            <MudTextField Label="Автор" Class="mt-3"
                          @bind-Value="Context.Author" For="@(() => Context.Author)" />
            <MudTextField Label="Видео" Class="mt-3"
                          @bind-Value="Context.VideoUrl" For="@(() => Context.VideoUrl)" />

        </EditForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Отменить</MudButton>
        <MudButton ButtonType="ButtonType.Submit" Color="Color.Info" OnClick="AddOrUpdate" Disabled="@formInvalid">Сохранить</MudButton>
    </DialogActions>
</MudDialog>

@code {

    private readonly string imgPath = "images";

    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public Picture Context { get; set; } = new Picture();

    private bool formInvalid = true;
    private EditContext editContext;


    protected override void OnInitialized()
    {
        editContext = new EditContext(Context);
        editContext.OnFieldChanged += HandleFieldChanged;
    }

    private void HandleFieldChanged(object sender, FieldChangedEventArgs e)
    {
        formInvalid = !editContext.Validate();
        StateHasChanged();
    }


    async Task OnInputFileChange(InputFileChangeEventArgs e)
    {
        var path = System.IO.Path.Combine(WebHostEnvironment.WebRootPath, imgPath);
        await FileStorageService.UploadFile(path, e.File);
        Context.Image = @$"{imgPath}/{e.File.Name}";
    }

    void AddOrUpdate() => MudDialog.Close(DialogResult.Ok(Context));

    void Cancel() => MudDialog.Cancel();
}
