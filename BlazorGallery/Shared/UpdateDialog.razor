<h3>Правка</h3>




<div style="max-width: 400px;">
    <EditForm Model="@Context" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator />
        <MudCard>
            <MudCardContent>
                <MudTextField Label="Изображение"
                              @bind-Value="Context.ImgUrl" For="@(() => Context.ImgUrl)" />
                <MudTextField Label="Название" Class="mt-3"
                              @bind-Value="Context.Text" For="@(() => Context.Text)" />
                <MudTextField Label="Видео" Class="mt-3"
                              @bind-Value="Context.VideoUrl" For="@(() => Context.VideoUrl)" />
                <MudTextField Label="Автор" Class="mt-3"
                              @bind-Value="Context.Author" For="@(() => Context.Author)" />
            </MudCardContent>
            <MudCardActions>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Сохранить</MudButton>
                <MudButton Variant="Variant.Filled" Color="Color.Secondary" Class="ml-auto">Отмена</MudButton>
            </MudCardActions>
        </MudCard>
        <MudText Typo="Typo.body2" Align="Align.Center" Class="my-4">
            Fill out the form correctly to see the success message.
        </MudText>

        
    </EditForm>
</div>



@if (files != null)
{
    <MudText Typo="@Typo.h6">@files.Count() File@(files.Count()>1?"s":""):</MudText>
    <MudList>
        @foreach (var file in files)
        {
            <MudListItem Icon="@Icons.Filled.AttachFile" @key="@file">
                @file.Name <code>@file.Size bytes</code>
            </MudListItem>
        }
    </MudList>
}

@code {
    bool success;
    string[] errors = { };
    MudTextField<string> pwField1;
    MudForm form;


    IList<IBrowserFile> files = new List<IBrowserFile>();
    private void UploadFiles(InputFileChangeEventArgs e)
    {
        foreach (var file in e.GetMultipleFiles())
        {
            files.Add(file);
        }
        //TODO upload the files to the server
    }


    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public Picture Context { get; set; }



    private void OnValidSubmit(EditContext context)
    {
        success = true;
        StateHasChanged();
    }

}